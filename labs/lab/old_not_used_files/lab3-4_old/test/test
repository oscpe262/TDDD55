declare
    a : integer;
    b : real;
    c : array 10 of integer;
    d : array 11 of integer;
    e : array 10 of real;
    f : array 11 of real;

/* Note that we already have declared a variable f,
 * We would expect the compiler to complain when we
 * try to create a function f, but to continue parsing.
*/
function f (x : integer;
            y : real;
            z : array 10 of integer) : integer
begin
    return z[x + y];
end;

function fac (x : integer) : integer
begin
    if x == 0 then
      begin
        return 1;
      end
    else
      begin
        return x * fac(x - 1);
      end if;
end;

function fib (x : integer) : integer
begin
    if x == 0 then
      begin
        return 1;
      end
    elseif x == 1 then
      begin
        return 1;
      end
    else
      begin
        return x + fib(x - 1);
      end if;
end;

function g ( x : array 10 of integer ) : array 11 of integer
declare
    a : array 11 of integer;
    i : integer;
    s : integer;
begin
    i := 0; 
    while i < 10 do
      begin
        a[i] := x[i];
        s := s + x[i];
      end while;
    a[10] := s;
    return a;
end;


begin
    putint(fib(getint()));
    putint(fac(getint()));
    
    a := 0;
    while a < 9 do
      begin
        c[a] := getint();
      end while;

    d := g(c);
    putint(d[10]);
end;
